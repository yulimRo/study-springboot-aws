buildscript {
    ext{ //build.gradle 에서 사용하고자 하는 전역변수
        springBootVersion = '2.1.7.RELEASE' //스프링부트 그레이들 플러그인의 2.1.7.RELEASE 를 의존성으로 받겠다는 의미
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//앞서 선언한 플러그인의 의존성들을 적용할 것인지 결정하는 코드
//스프링부트와 자바를 사용하기 위한 필수 추가 플러그인
apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin : 'org.springframework.boot'
apply plugin : 'io.spring.dependency-management' //스프링 부트의 의존성들을 관리해 주는 플러그인이라 필수 추가

group 'org.jojoldu.book'
version '1.0-SNAPSHOT'


//repositories는 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정함
//기본적으로 mavenCentral을 많이 사용하지만 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용
//mavenCentral은 이전부터 많이 사용하는 저장소 이지만, 본인이 만든 라이브러리를 업로드하기 위해서는 많은 과정과 설정이 필요
//jcenter는 이런 문제점을 개선하여 라이브러리 업로드를 간단하게 하였다. jcenter라이브러리를 업로드하면 mavenCentral에도 업로드될 수 있도록 자동화ㅗ 가능
repositories {
    mavenCentral()
    jcenter()
}

//프로젝트 개발에 필요한 의존성들을 선언하는 곳이다.
//특정버전을 명시하지 않아야 맨 위에 작성한 "org.springframework.boot:spring-boot:${springBootBVersion}"버전을 따라간다.
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
/* Default build.gradle

plugins {
    id 'java'
}

group 'org.jojoldu.book'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.12' - 에러발 Gradle 4.10 이래로 deprecate 되었다.
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

test {
    useJUnitPlatform()
}
*/